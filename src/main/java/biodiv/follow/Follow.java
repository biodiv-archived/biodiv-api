package biodiv.follow;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import biodiv.user.User;

/**
 * Follow generated by hbm2java
 */
@Entity
@Table(name = "follow", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = { "author_id",
		"object_id", "object_type" }))
public class Follow implements java.io.Serializable {

	private long id;
	private long version;
	private User user;
	private long objectId;
	private String objectType;
	private Date createdOn;

	public Follow() {
	}

	public Follow(User user, long objectId, String objectType) {
		this.user = user;
		this.objectId = objectId;
		this.objectType = objectType;
	}

	public Follow( User user, long objectId, String objectType, Date createdOn) {
		this.user = user;
		this.objectId = objectId;
		this.objectType = objectType;
		this.createdOn = createdOn;
	}

	@Id
	@GenericGenerator(
	        name = "hibernate_generator",
	        strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
	        parameters = {
	                @Parameter(name = "sequence_name", value = "hibernate_sequence"),
	                @Parameter(name = "increment_size", value = "1"),
                    @Parameter(name = "optimizer", value = "hilo")
	        }
	)
	@GeneratedValue(generator = "hibernate_generator")
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "object_id", nullable = false)
	public long getObjectId() {
		return this.objectId;
	}

	public void setObjectId(long objectId) {
		this.objectId = objectId;
	}

	@Column(name = "object_type", nullable = false)
	public String getObjectType() {
		return this.objectType;
	}

	public void setObjectType(String objectType) {
		this.objectType = objectType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 29)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}
	
	public static void addFollower(){
		
	}

	public static String getType(Object objectToFollow) {
		String objectType = objectToFollow.getClass().getCanonicalName();
		String result = null;
		switch(objectType){
		
		case "biodiv.observation.Observation":
			result = "species.participation.Observation";
			break;
			
		case "biodiv.userGroup.UserGroup":
			result = "species.groups.UserGroup";
			break;
		
		default:
			//
		}
		return result;
	}

}