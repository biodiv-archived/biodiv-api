package biodiv.comment;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import biodiv.common.Language;
import biodiv.user.User;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", schema = "public")
public class Comment implements java.io.Serializable {

	private long id;
	private long version;
	private Language language;
	private User user;
	private String body;
	private long commentHolderId;
	private String commentHolderType;
	private Date dateCreated;
	private Date lastUpdated;
	private long rootHolderId;
	private String rootHolderType;
	private Long mainParentId;
	private Long parentId;
	private String subject;
	//private Set commentResources = new HashSet(0);
	//private Set commentUsers = new HashSet(0);

	public Comment() {
	}

	public Comment(Language language, User user, String body, long commentHolderId, String commentHolderType,
			Date dateCreated, Date lastUpdated, long rootHolderId, String rootHolderType) {
		this.language = language;
		this.user = user;
		this.body = body;
		this.commentHolderId = commentHolderId;
		this.commentHolderType = commentHolderType;
		this.dateCreated = dateCreated;
		this.lastUpdated = lastUpdated;
		this.rootHolderId = rootHolderId;
		this.rootHolderType = rootHolderType;
	}

	public Comment(Language language, User user, String body, long commentHolderId, String commentHolderType,
			Date dateCreated, Date lastUpdated, long rootHolderId, String rootHolderType, Long mainParentId,
			Long parentId, String subject) {
		this.language = language;
		this.user = user;
		this.body = body;
		this.commentHolderId = commentHolderId;
		this.commentHolderType = commentHolderType;
		this.dateCreated = dateCreated;
		this.lastUpdated = lastUpdated;
		this.rootHolderId = rootHolderId;
		this.rootHolderType = rootHolderType;
		this.mainParentId = mainParentId;
		this.parentId = parentId;
		this.subject = subject;
//		this.commentResources = commentResources;
//		this.commentUsers = commentUsers;
	}

	@Id
	@GenericGenerator(
	        name = "hibernate_generator",
	        strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
	        parameters = {
	                @Parameter(name = "sequence_name", value = "hibernate_sequence"),
	                @Parameter(name = "increment_size", value = "1"),
                    @Parameter(name = "optimizer", value = "hilo")
	        }
	)
	@GeneratedValue(generator = "hibernate_generator")
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version", nullable = false)
	public long getVersion() {
		return this.version;
	}

	public void setVersion(long version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "language_id", nullable = false)
	public Language getLanguage() {
		return this.language;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "body", nullable = false)
	public String getBody() {
		return this.body;
	}

	public void setBody(String body) {
		this.body = body;
	}

	@Column(name = "comment_holder_id", nullable = false)
	public long getCommentHolderId() {
		return this.commentHolderId;
	}

	public void setCommentHolderId(long commentHolderId) {
		this.commentHolderId = commentHolderId;
	}

	@Column(name = "comment_holder_type", nullable = false)
	public String getCommentHolderType() {
		return this.commentHolderType;
	}

	public void setCommentHolderType(String commentHolderType) {
		this.commentHolderType = commentHolderType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 29)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated", nullable = false, length = 29)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "root_holder_id", nullable = false)
	public long getRootHolderId() {
		return this.rootHolderId;
	}

	public void setRootHolderId(long rootHolderId) {
		this.rootHolderId = rootHolderId;
	}

	@Column(name = "root_holder_type", nullable = false)
	public String getRootHolderType() {
		return this.rootHolderType;
	}

	public void setRootHolderType(String rootHolderType) {
		this.rootHolderType = rootHolderType;
	}

	@Column(name = "main_parent_id")
	public Long getMainParentId() {
		return this.mainParentId;
	}

	public void setMainParentId(Long mainParentId) {
		this.mainParentId = mainParentId;
	}

	@Column(name = "parent_id")
	public Long getParentId() {
		return this.parentId;
	}

	public void setParentId(Long parentId) {
		this.parentId = parentId;
	}

	@Column(name = "subject")
	public String getSubject() {
		return this.subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
	}


//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
//	public Set getCommentResources() {
//		return this.commentResources;
//	}
//
//	public void setCommentResources(Set commentResources) {
//		this.commentResources = commentResources;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comment")
//	public Set getCommentUsers() {
//		return this.commentUsers;
//	}
//
//	public void setCommentUsers(Set commentUsers) {
//		this.commentUsers = commentUsers;
//	}

	public static String getClassType(Object parentComment) {
		
		String result = null;
		String name = parentComment.getClass().getSimpleName();
		
		switch(name){
		
		 case "Comment":
			 result = "species.participation.Comment";
			 break;
		default:
			
		}
		return result;
	}
}
